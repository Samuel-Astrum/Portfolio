// Generated by view binder compiler. Do not edit!
package com.example.schedulingproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.schedulingproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemClassBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView classSectionTextView;

  @NonNull
  public final TextView courseNameTextView;

  @NonNull
  public final TextView instructorTextView;

  @NonNull
  public final TextView locationTextView;

  @NonNull
  public final TextView timeAndWeekdaysTextView;

  private ItemClassBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView classSectionTextView, @NonNull TextView courseNameTextView,
      @NonNull TextView instructorTextView, @NonNull TextView locationTextView,
      @NonNull TextView timeAndWeekdaysTextView) {
    this.rootView = rootView;
    this.classSectionTextView = classSectionTextView;
    this.courseNameTextView = courseNameTextView;
    this.instructorTextView = instructorTextView;
    this.locationTextView = locationTextView;
    this.timeAndWeekdaysTextView = timeAndWeekdaysTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemClassBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemClassBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_class, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemClassBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.class_section_text_view;
      TextView classSectionTextView = ViewBindings.findChildViewById(rootView, id);
      if (classSectionTextView == null) {
        break missingId;
      }

      id = R.id.course_name_text_view;
      TextView courseNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (courseNameTextView == null) {
        break missingId;
      }

      id = R.id.instructor_text_view;
      TextView instructorTextView = ViewBindings.findChildViewById(rootView, id);
      if (instructorTextView == null) {
        break missingId;
      }

      id = R.id.location_text_view;
      TextView locationTextView = ViewBindings.findChildViewById(rootView, id);
      if (locationTextView == null) {
        break missingId;
      }

      id = R.id.time_and_weekdays_text_view;
      TextView timeAndWeekdaysTextView = ViewBindings.findChildViewById(rootView, id);
      if (timeAndWeekdaysTextView == null) {
        break missingId;
      }

      return new ItemClassBinding((ConstraintLayout) rootView, classSectionTextView,
          courseNameTextView, instructorTextView, locationTextView, timeAndWeekdaysTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
